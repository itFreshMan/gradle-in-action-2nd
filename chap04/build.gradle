//version = new ProjectVersion(0,1);

class ProjectVersion{
	Integer major
	Integer minor
	Boolean release
	
	ProjectVersion(Integer major,Integer minor){
		this.major = major;
		this.minor = minor;
		this.release = Boolean.FALSE
	}
	
	ProjectVersion(Integer major,Integer minor,Boolean release){
		this(major,minor)
		this.release = release
	}
	
	@Override
	String toString(){
		"$major.$minor${release?'':'-SNAPSHOT'}"
	}
}


task printVersion <<{
	println "$version"
}

//ext.versionFile = file('version.properties')

//task 没有使用<< ,表示为task配置,会在所有的任务执行前执行;
task loadVersion {
	project.version = readVersion()
}

ProjectVersion readVersion(){
	logger.quiet 'read the version file'
	
	def versionFile = file('version.properties')
	
	if(!versionFile.exists()){
		throw new GradleException("versionFile is not exist:$versionFile.absolutePath")
	}
	Properties properties = new Properties()
	versionFile.withInputStream{stream ->
		properties.load(stream)
	}
	println 'loadFile ' +properties.major.toInteger() +':'+properties.minor.toInteger()+':'+properties.release.toBoolean()
	new ProjectVersion(properties.major.toInteger(),properties.minor.toInteger(),properties.release.toBoolean())
}




